#Usage Report
usage-report-label-header=header
usage-report-label-report-date=report-date
usage-report-label-report-time=time
usage-report-label-print-by=printed-by
usage-report-label-report-period=usage-period
usage-report-label-report-period2=period
usage-report-label-period-from=from
usage-report-label-period-to=to

usage-report-label-member-code=member-code
usage-report-label-member-name=member-name

usage-report-summary=summary-usage
usage-usage-product=product
usage-usage-products=products
usage-usage-id=id
usage-usage-name=name
usage-usage-usage=usage
usage-report.label.basic-report-id=50
usage-report.label.basic-report=Basic Report
usage-report.label.chinese-report-id=51
usage-report.label.chinese-report=Chinese Report
usage-report.label.enquiry-alert-id=56
usage-report.label.enquiry-alert=Enquiry Alert
usage-report.label.monitor-alert-id=54
usage-report.label.monitor-alert=Monitoring
usage-report.label.no-match-id=47
usage-report.label.no-match=No-match Report

usage-transaction-detail=transaction-details
usage-detail=detail

usage-report.label.delivery-date=date-time
usage-report.label.hkbrc=hkbrc
usage-report.label.hkci=hkci
usage-report.label.other-reg=other-regis
usage-report.label.place-reg=place-of-regis
usage-report.label.customer-no=custom-number
usage-report.label.location-branch=branch-id
usage-report.label.account-manager=acc-manager-code
usage-report.label.reason-code=reason-code
usage-report.label.user-id=uid
usage-report.label.product-code=product-code
usage-report.label.product-name=product-name
usage-report.label.report-ref=report-ref-no
usage-report.label.ai-ref-code1=ai-ref-code1
usage-report.label.ai-ref-code2=ai-ref-code2
usage-report.label.ai-ref-code3=ai-ref-code3
usage-report.label.reportoption=Report Option :
usage-report.label.usagereport=Usage Report
usage-report.lable.criteria=Criteria
usage-report.label.reportover2000=Your transactions in period selected are more than 2,000 records. Please select the options below to generate report offline.
usage-report.button.dewnload=Download
usage-report.button.cancel=Cancel

usage-report.label.discharged-summary=discharged-summary
usage-report.label.discharged-summary-details=summary

usage-report.label.discharged-date=discharged-date-time
usage-report.label.discharged-status=status

#SQL
admin-report.summary-usage.specific=and spm_group.groupid = {0}
admin-report.summary-usage.specific.monthlyplan=and spm_group.monthly_plan in ({0}) and spm_group.disabled = 0 AND spm_group.deleted = 0
admin-report.usage-transaction.specific=and spm_group.groupid = {0}
admin-report.usage-transaction.specific.monthlyplan=and spm_group.monthly_plan in ({0}) and spm_group.disabled = 0 AND spm_group.deleted = 0
admin-report.discharge-transaction.specific=and spm_group.groupid = {0}
admin-report.discharge-transaction.specific.monthlyplan=and spm_group.monthly_plan in ({0}) and spm_group.disabled = 0 AND spm_group.deleted = 0

admin-report.summary-usage=select groupid, group_name_en, aicode, sum(isnull(basicreport,0)) basicreport, sum(isnull(chinesereport,0)) chinesereport, sum(isnull(nomatchreport,0)) nomatchreport, sum(isnull(enquiryalert,0)) enquiryalert, sum(isnull(monitoringalert,0)) monitoringalert from (select spm_group.groupid, spm_group.group_name_en, spm_group.aicode, case when spm_expense.productusage = 50 then 1 end as basicreport, case when spm_expense.productusage = 51 then 1 end as chinesereport, case when spm_expense.productusage = 47 then 1 end as nomatchreport, case when spm_expense.productusage = 56 then 1 end as enquiryalert, case when spm_expense.productusage = 54 then 1 end as monitoringalert from spm_group (nolock) left outer join (select expense.groupaiid, expense.requesttime, expense.productusage  from spm_expense expense (nolock)  where expense.disabled = 0  and expense.requesttime >= '{0}' and expense.requesttime < '{1}'  ) as spm_expense  on spm_group.groupid = spm_expense.groupaiid where spm_group.aiflag = 1 {2} ) data group by groupid, group_name_en, aicode
admin-report.usage-transaction=select dbo.convert_datetime(expense.requesttime) as deliverydate, master_duns.hkbrc as hkbrc, master_duns.hkci as hkci, master_duns.other_reg as otherreg, master_duns.other_reg_place as placereg, expense.customer_no as customerno, expense.loc_branch_id as location, expense.acc_mnger_code as managercode, case when expense.productusage = 56 then (select base_reason.description_en from base_reason (nolock) where base_reason.id = register.reasoncode) else (select base_reason.description_en from base_reason where base_reason.id = mal_product.reasoncode) end as reason, (select case when spm_user.deleted = 0 then spm_user.userid else case when (len(spm_user.userid)-(len(spm_user.uid)+1) <= 0)  then spm_user.userid else substring(spm_user.userid,1,len(spm_user.userid)-(len(spm_user.uid)+1)) end end as userid from spm_user where spm_user.uid = expense.uid) userid, expense.productusage as productcode, case when expense.productusage = 47 then 'No-match Report'+ case when isnull(mal_product.hkbrc,'') <> '' then ' [HKBRC = '+mal_product.hkbrc+']' when isnull(mal_product.hkci,'') <> '' then ' [HKCI = '+mal_product.hkci+']' when isnull(mal_product.other_reg_no,'') <> '' then ' [Other Registration = '+mal_product.other_reg_no+']' when isnull(mal_product.namesearch,'') <> '' then ' [Name = '+mal_product.namesearch+']' else ' [No Criteria Entered]' end else spm_object.objectlabel end as productname, expense.REPORT_REF_NO reportrefno, case when expense.productusage = 56 then register.airefcode1 else mal_product.airefcode1 end as airef1, case when expense.productusage = 56 then register.airefcode2 else mal_product.airefcode2 end as airef2, case when expense.productusage = 56 then register.airefcode3 else mal_product.airefcode3 end as airef3 from spm_expense expense (nolock) left outer join master_dunstable master_duns (nolock) on expense.cbuid = master_duns.cbuid inner join spm_object (nolock) on expense.productusage = spm_object.objectid left outer join mal_productdeliver mal_product (nolock) on expense.expenseid = mal_product.expenseid and mal_product.transactionid = (select max(a.transactionid) from mal_productdeliver a (nolock) where a.expenseid = expense.expenseid) left outer join (select trans.expenseid, regis.reasoncode, regis.airefcode1, regis.airefcode2, regis.airefcode3 from prod_register regis (nolock), prod_alert_trans trans (nolock) where trans.monitorid = regis.monitorid) as register on expense.expenseid = register.expenseid inner join spm_group on expense.groupaiid = spm_group.groupid where spm_group.aiflag = 1 {0} and expense.disabled = 0 and expense.requesttime >= '{1}' and expense.requesttime < '{2}' order by {3}
#admin-report.usage-transaction=select dbo.convert_datetime(expense.requesttime) as deliverydate, master_duns.hkbrc as hkbrc, master_duns.hkci as hkci, master_duns.other_reg as otherreg, master_duns.other_reg_place as placereg, expense.customer_no as customerno, expense.loc_branch_id as location, expense.acc_mnger_code as managercode, case when expense.productusage = 56 then (select base_reason.description_en from base_reason (nolock) where base_reason.id = register.reasoncode) else (select base_reason.description_en from base_reason where base_reason.id = mal_product.reasoncode) end as reason, (select case when spm_user.deleted = 0 then spm_user.userid else substring(spm_user.userid,1,len(spm_user.userid)-(len(spm_user.uid)+1)) end as userid from spm_user where spm_user.uid = expense.uid) userid, expense.productusage as productcode, case when expense.productusage = 47 then 'No-match Report'+ case when isnull(mal_product.hkbrc,'') <> '' then ' [HKBRC = '+mal_product.hkbrc+']' when isnull(mal_product.hkci,'') <> '' then ' [HKCI = '+mal_product.hkci+']' when isnull(mal_product.other_reg_no,'') <> '' then ' [Other Registration = '+mal_product.other_reg_no+']' when isnull(mal_product.namesearch,'') <> '' then ' [Name = '+mal_product.namesearch+']' else ' [No Criteria Entered]' end else spm_object.objectlabel end as productname, expense.REPORT_REF_NO reportrefno, case when expense.productusage = 56 then register.airefcode1 else mal_product.airefcode1 end as airef1, case when expense.productusage = 56 then register.airefcode2 else mal_product.airefcode2 end as airef2, case when expense.productusage = 56 then register.airefcode3 else mal_product.airefcode3 end as airef3 from spm_expense expense (nolock) left outer join master_dunstable master_duns (nolock) on expense.cbuid = master_duns.cbuid inner join spm_object (nolock) on expense.productusage = spm_object.objectid left outer join mal_productdeliver mal_product (nolock) on expense.expenseid = mal_product.expenseid and mal_product.transactionid = (select max(a.transactionid) from mal_productdeliver a (nolock) where a.expenseid = expense.expenseid) left outer join (select trans.expenseid, regis.reasoncode, regis.airefcode1, regis.airefcode2, regis.airefcode3 from prod_register regis (nolock), prod_alert_trans trans (nolock) where trans.monitorid = regis.monitorid) as register on expense.expenseid = register.expenseid inner join spm_group on expense.groupaiid = spm_group.groupid where spm_group.aiflag = 1 {0} and expense.disabled = 0 and expense.requesttime >= '{1}' and expense.requesttime < '{2}' order by {3}
admin-report.discharge-transaction=select dbo.convert_datetime(expense.requesttime) as deliverydate, master_duns.hkbrc as hkbrc, master_duns.hkci as hkci, master_duns.other_reg as otherreg, master_duns.other_reg_place as placereg, expense.customer_no as customerno, expense.loc_branch_id as location, expense.acc_mnger_code as managercode, case when expense.productusage = 56 then (select base_reason.description_en from base_reason (nolock) where base_reason.id = register.reasoncode) else (select base_reason.description_en from base_reason where base_reason.id = mal_product.reasoncode) end as reason, (select case when spm_user.deleted = 0 then spm_user.userid else case when (len(spm_user.userid)-(len(spm_user.uid)+1) <= 0)  then spm_user.userid else substring(spm_user.userid,1,len(spm_user.userid)-(len(spm_user.uid)+1)) end end as userid from spm_user where spm_user.uid = expense.uid) userid, expense.productusage as productcode, case when expense.productusage = 47 then 'No-match Report'+ case when isnull(mal_product.hkbrc,'') <> '' then ' [HKBRC = '+mal_product.hkbrc+']' when isnull(mal_product.hkci,'') <> '' then ' [HKCI = '+mal_product.hkci+']' when isnull(mal_product.other_reg_no,'') <> '' then ' [Other Registration = '+mal_product.other_reg_no+']' when isnull(mal_product.namesearch,'') <> '' then ' [Name = '+mal_product.namesearch+']' else ' [No Criteria Entered]' end else spm_object.objectlabel end as productname, expense.REPORT_REF_NO reportrefno, case when expense.productusage = 56 then register.airefcode1 else mal_product.airefcode1 end as airef1, case when expense.productusage = 56 then register.airefcode2 else mal_product.airefcode2 end as airef2, case when expense.productusage = 56 then register.airefcode3 else mal_product.airefcode3 end as airef3, dbo.convert_datetime(discharge.createddate) as dischargedate, case when discharge.flag = -1 then 'Discharged' else 'Undo Discharged' end as status from spm_expense expense (nolock) left outer join master_dunstable master_duns (nolock) on expense.cbuid = master_duns.cbuid inner join spm_object (nolock) on expense.productusage = spm_object.objectid left outer join mal_productdeliver mal_product (nolock) on expense.expenseid = mal_product.expenseid and mal_product.transactionid = (select max(a.transactionid) from mal_productdeliver a (nolock) where a.expenseid = expense.expenseid) left outer join (select trans.expenseid, regis.reasoncode, regis.airefcode1, regis.airefcode2, regis.airefcode3 from prod_register regis (nolock), prod_alert_trans trans (nolock) where trans.monitorid = regis.monitorid) as register on expense.expenseid = register.expenseid inner join spm_discharge_trans discharge (nolock) on expense.expenseid = discharge.expenseid inner join spm_group (nolock) on expense.groupaiid = spm_group.groupid where spm_group.aiflag = 1 {0} and expense.disabled = 0 and expense.requesttime >= '{1}' and expense.requesttime < '{2}' order by {3}
#admin-report.discharge-transaction=select dbo.convert_datetime(expense.requesttime) as deliverydate, master_duns.hkbrc as hkbrc, master_duns.hkci as hkci, master_duns.other_reg as otherreg, master_duns.other_reg_place as placereg, expense.customer_no as customerno, expense.loc_branch_id as location, expense.acc_mnger_code as managercode, case when expense.productusage = 56 then (select base_reason.description_en from base_reason (nolock) where base_reason.id = register.reasoncode) else (select base_reason.description_en from base_reason where base_reason.id = mal_product.reasoncode) end as reason, (select case when spm_user.deleted = 0 then spm_user.userid else substring(spm_user.userid,1,len(spm_user.userid)-(len(spm_user.uid)+1)) end as userid from spm_user where spm_user.uid = expense.uid) userid, expense.productusage as productcode, case when expense.productusage = 47 then 'No-match Report'+ case when isnull(mal_product.hkbrc,'') <> '' then ' [HKBRC = '+mal_product.hkbrc+']' when isnull(mal_product.hkci,'') <> '' then ' [HKCI = '+mal_product.hkci+']' when isnull(mal_product.other_reg_no,'') <> '' then ' [Other Registration = '+mal_product.other_reg_no+']' when isnull(mal_product.namesearch,'') <> '' then ' [Name = '+mal_product.namesearch+']' else ' [No Criteria Entered]' end else spm_object.objectlabel end as productname, expense.REPORT_REF_NO reportrefno, case when expense.productusage = 56 then register.airefcode1 else mal_product.airefcode1 end as airef1, case when expense.productusage = 56 then register.airefcode2 else mal_product.airefcode2 end as airef2, case when expense.productusage = 56 then register.airefcode3 else mal_product.airefcode3 end as airef3, dbo.convert_datetime(discharge.createddate) as dischargedate, case when discharge.flag = -1 then 'Discharged' else 'Undo Discharged' end as status from spm_expense expense (nolock) left outer join master_dunstable master_duns (nolock) on expense.cbuid = master_duns.cbuid inner join spm_object (nolock) on expense.productusage = spm_object.objectid left outer join mal_productdeliver mal_product (nolock) on expense.expenseid = mal_product.expenseid and mal_product.transactionid = (select max(a.transactionid) from mal_productdeliver a (nolock) where a.expenseid = expense.expenseid) left outer join (select trans.expenseid, regis.reasoncode, regis.airefcode1, regis.airefcode2, regis.airefcode3 from prod_register regis (nolock), prod_alert_trans trans (nolock) where trans.monitorid = regis.monitorid) as register on expense.expenseid = register.expenseid inner join spm_discharge_trans discharge (nolock) on expense.expenseid = discharge.expenseid inner join spm_group (nolock) on expense.groupaiid = spm_group.groupid where spm_group.aiflag = 1 {0} and expense.disabled = 0 and expense.requesttime >= '{1}' and expense.requesttime < '{2}' order by {3}

admin-report.summary-usage-ccra.specific=and spm_group.groupid = {0}
admin-report.summary-usage-ccra.specific.monthlyplan=and spm_group.monthly_plan in ({0}) and spm_group.disabled = 0 AND spm_group.deleted = 0
admin-report.usage-transaction-ccra.specific=and spm_group.groupid = {0}
admin-report.usage-transaction-ccra.specific.monthlyplan=and spm_group.monthly_plan in ({0}) and spm_group.disabled = 0 AND spm_group.deleted = 0
admin-report.discharge-transaction-ccra.specific=and spm_group.groupid = {0}
admin-report.discharge-transaction-ccra.specific.monthlyplan=and spm_group.monthly_plan in ({0}) and spm_group.disabled = 0 AND spm_group.deleted = 0

admin-report.summary-usage-ccra=select groupid, group_name_en, aicode, sum(isnull(basicreport,0)) basicreport, sum(isnull(chinesereport,0)) chinesereport, sum(isnull(nomatchreport,0)) nomatchreport, sum(isnull(enquiryalert,0)) enquiryalert, sum(isnull(monitoringalert,0)) monitoringalert from (select spm_group.groupid, spm_group.group_name_en, spm_group.aicode, case when spm_expense.productusage = 50 then 1 end as basicreport, case when spm_expense.productusage = 51 then 1 end as chinesereport, case when spm_expense.productusage = 47 then 1 end as nomatchreport, case when spm_expense.productusage = 56 then 1 end as enquiryalert, case when spm_expense.productusage = 54 then 1 end as monitoringalert from spm_group (nolock) left outer join spm_user on spm_user.groupccraid = spm_group.groupid left outer join (select expense.uid, expense.requesttime, expense.productusage  from spm_expense expense (nolock)  where expense.disabled = 0  and expense.requesttime >= '{0}' and expense.requesttime < '{1}'  ) as spm_expense  on spm_user.uid = spm_expense.uid where (spm_group.parentgroupid = 1 or spm_group.parentgroupid is null) {2} ) data group by groupid, group_name_en, aicode
admin-report.usage-transaction-ccra=select dbo.convert_datetime(expense.requesttime) as deliverydate, master_duns.hkbrc as hkbrc, master_duns.hkci as hkci, master_duns.other_reg as otherreg, master_duns.other_reg_place as placereg, expense.customer_no as customerno, expense.loc_branch_id as location, expense.acc_mnger_code as managercode, case when expense.productusage = 56 then (select base_reason.description_en from base_reason (nolock) where base_reason.id = register.reasoncode) else (select base_reason.description_en from base_reason where base_reason.id = mal_product.reasoncode) end as reason, (select case when spm_user.deleted = 0 then spm_user.userid else case when (len(spm_user.userid)-(len(spm_user.uid)+1) <= 0)  then spm_user.userid else substring(spm_user.userid,1,len(spm_user.userid)-(len(spm_user.uid)+1)) end end as userid from spm_user where spm_user.uid = expense.uid) userid, expense.productusage as productcode, case when expense.productusage = 47 then 'No-match Report'+ case when isnull(mal_product.hkbrc,'') <> '' then ' [HKBRC = '+mal_product.hkbrc+']' when isnull(mal_product.hkci,'') <> '' then ' [HKCI = '+mal_product.hkci+']' when isnull(mal_product.other_reg_no,'') <> '' then ' [Other Registration = '+mal_product.other_reg_no+']' when isnull(mal_product.namesearch,'') <> '' then ' [Name = '+mal_product.namesearch+']' else ' [No Criteria Entered]' end else spm_object.objectlabel end as productname, expense.REPORT_REF_NO reportrefno, case when expense.productusage = 56 then register.airefcode1 else mal_product.airefcode1 end as airef1, case when expense.productusage = 56 then register.airefcode2 else mal_product.airefcode2 end as airef2, case when expense.productusage = 56 then register.airefcode3 else mal_product.airefcode3 end as airef3 from spm_expense expense (nolock) left outer join master_dunstable master_duns (nolock) on expense.cbuid = master_duns.cbuid inner join spm_object (nolock) on expense.productusage = spm_object.objectid left outer join mal_productdeliver mal_product (nolock) on expense.expenseid = mal_product.expenseid and mal_product.transactionid = (select max(a.transactionid) from mal_productdeliver a (nolock) where a.expenseid = expense.expenseid) left outer join (select regis.expenseid, regis.reasoncode, regis.airefcode1, regis.airefcode2, regis.airefcode3 from prod_register regis (nolock), prod_alert_trans trans (nolock) where trans.monitorid = regis.monitorid) as register on expense.expenseid = register.expenseid inner join spm_user on spm_user.uid = expense.uid inner join spm_group on spm_user.groupccraid = spm_group.groupid where (spm_group.parentgroupid = 1 or spm_group.parentgroupid is null) {0} and expense.disabled = 0 and expense.requesttime >= '{1}' and expense.requesttime < '{2}' order by {3}
#admin-report.usage-transaction-ccra=select dbo.convert_datetime(expense.requesttime) as deliverydate, master_duns.hkbrc as hkbrc, master_duns.hkci as hkci, master_duns.other_reg as otherreg, master_duns.other_reg_place as placereg, expense.customer_no as customerno, expense.loc_branch_id as location, expense.acc_mnger_code as managercode, case when expense.productusage = 56 then (select base_reason.description_en from base_reason (nolock) where base_reason.id = register.reasoncode) else (select base_reason.description_en from base_reason where base_reason.id = mal_product.reasoncode) end as reason, (select case when spm_user.deleted = 0 then spm_user.userid else substring(spm_user.userid,1,len(spm_user.userid)-(len(spm_user.uid)+1)) end as userid from spm_user where spm_user.uid = expense.uid) userid, expense.productusage as productcode, case when expense.productusage = 47 then 'No-match Report'+ case when isnull(mal_product.hkbrc,'') <> '' then ' [HKBRC = '+mal_product.hkbrc+']' when isnull(mal_product.hkci,'') <> '' then ' [HKCI = '+mal_product.hkci+']' when isnull(mal_product.other_reg_no,'') <> '' then ' [Other Registration = '+mal_product.other_reg_no+']' when isnull(mal_product.namesearch,'') <> '' then ' [Name = '+mal_product.namesearch+']' else ' [No Criteria Entered]' end else spm_object.objectlabel end as productname, expense.REPORT_REF_NO reportrefno, case when expense.productusage = 56 then register.airefcode1 else mal_product.airefcode1 end as airef1, case when expense.productusage = 56 then register.airefcode2 else mal_product.airefcode2 end as airef2, case when expense.productusage = 56 then register.airefcode3 else mal_product.airefcode3 end as airef3 from spm_expense expense (nolock) left outer join master_dunstable master_duns (nolock) on expense.cbuid = master_duns.cbuid inner join spm_object (nolock) on expense.productusage = spm_object.objectid left outer join mal_productdeliver mal_product (nolock) on expense.expenseid = mal_product.expenseid and mal_product.transactionid = (select max(a.transactionid) from mal_productdeliver a (nolock) where a.expenseid = expense.expenseid) left outer join (select regis.expenseid, regis.reasoncode, regis.airefcode1, regis.airefcode2, regis.airefcode3 from prod_register regis (nolock), prod_alert_trans trans (nolock) where trans.monitorid = regis.monitorid) as register on expense.expenseid = register.expenseid inner join spm_user on spm_user.uid = expense.uid inner join spm_group on spm_user.groupccraid = spm_group.groupid where (spm_group.parentgroupid = 1 or spm_group.parentgroupid is null) {0} and expense.disabled = 0 and expense.requesttime >= '{1}' and expense.requesttime < '{2}' order by {3}
admin-report.discharge-transaction-ccra=select dbo.convert_datetime(expense.requesttime) as deliverydate, master_duns.hkbrc as hkbrc, master_duns.hkci as hkci, master_duns.other_reg as otherreg, master_duns.other_reg_place as placereg, expense.customer_no as customerno, expense.loc_branch_id as location, expense.acc_mnger_code as managercode, case when expense.productusage = 56 then (select base_reason.description_en from base_reason (nolock) where base_reason.id = register.reasoncode) else (select base_reason.description_en from base_reason where base_reason.id = mal_product.reasoncode) end as reason, (select case when spm_user.deleted = 0 then spm_user.userid else case when (len(spm_user.userid)-(len(spm_user.uid)+1) <= 0)  then spm_user.userid else substring(spm_user.userid,1,len(spm_user.userid)-(len(spm_user.uid)+1)) end end as userid from spm_user where spm_user.uid = expense.uid) userid, expense.productusage as productcode, case when expense.productusage = 47 then 'No-match Report'+ case when isnull(mal_product.hkbrc,'') <> '' then ' [HKBRC = '+mal_product.hkbrc+']' when isnull(mal_product.hkci,'') <> '' then ' [HKCI = '+mal_product.hkci+']' when isnull(mal_product.other_reg_no,'') <> '' then ' [Other Registration = '+mal_product.other_reg_no+']' when isnull(mal_product.namesearch,'') <> '' then ' [Name = '+mal_product.namesearch+']' else ' [No Criteria Entered]' end else spm_object.objectlabel end as productname, expense.REPORT_REF_NO reportrefno, case when expense.productusage = 56 then register.airefcode1 else mal_product.airefcode1 end as airef1, case when expense.productusage = 56 then register.airefcode2 else mal_product.airefcode2 end as airef2, case when expense.productusage = 56 then register.airefcode3 else mal_product.airefcode3 end as airef3, dbo.convert_datetime(discharge.createddate) as dischargedate, case when discharge.flag = -1 then 'Discharged' else 'Undo Discharged' end as status from spm_expense expense (nolock) left outer join master_dunstable master_duns (nolock) on expense.cbuid = master_duns.cbuid inner join spm_object (nolock) on expense.productusage = spm_object.objectid left outer join mal_productdeliver mal_product (nolock) on expense.expenseid = mal_product.expenseid and mal_product.transactionid = (select max(a.transactionid) from mal_productdeliver a (nolock) where a.expenseid = expense.expenseid) left outer join (select regis.expenseid, regis.reasoncode, regis.airefcode1, regis.airefcode2, regis.airefcode3 from prod_register regis (nolock), prod_alert_trans trans (nolock) where trans.monitorid = regis.monitorid) as register on expense.expenseid = register.expenseid inner join spm_discharge_trans discharge (nolock) on expense.expenseid = discharge.expenseid inner join spm_user on spm_user.uid = expense.uid inner join spm_group on spm_user.groupccraid = spm_group.groupid where (spm_group.parentgroupid = 1 or spm_group.parentgroupid is null) {0} and expense.disabled = 0 and expense.requesttime >= '{1}' and expense.requesttime < '{2}' order by {3}
#admin-report.discharge-transaction-ccra=select dbo.convert_datetime(expense.requesttime) as deliverydate, master_duns.hkbrc as hkbrc, master_duns.hkci as hkci, master_duns.other_reg as otherreg, master_duns.other_reg_place as placereg, expense.customer_no as customerno, expense.loc_branch_id as location, expense.acc_mnger_code as managercode, case when expense.productusage = 56 then (select base_reason.description_en from base_reason (nolock) where base_reason.id = register.reasoncode) else (select base_reason.description_en from base_reason where base_reason.id = mal_product.reasoncode) end as reason, (select case when spm_user.deleted = 0 then spm_user.userid else substring(spm_user.userid,1,len(spm_user.userid)-(len(spm_user.uid)+1)) end as userid from spm_user where spm_user.uid = expense.uid) userid, expense.productusage as productcode, case when expense.productusage = 47 then 'No-match Report'+ case when isnull(mal_product.hkbrc,'') <> '' then ' [HKBRC = '+mal_product.hkbrc+']' when isnull(mal_product.hkci,'') <> '' then ' [HKCI = '+mal_product.hkci+']' when isnull(mal_product.other_reg_no,'') <> '' then ' [Other Registration = '+mal_product.other_reg_no+']' when isnull(mal_product.namesearch,'') <> '' then ' [Name = '+mal_product.namesearch+']' else ' [No Criteria Entered]' end else spm_object.objectlabel end as productname, expense.REPORT_REF_NO reportrefno, case when expense.productusage = 56 then register.airefcode1 else mal_product.airefcode1 end as airef1, case when expense.productusage = 56 then register.airefcode2 else mal_product.airefcode2 end as airef2, case when expense.productusage = 56 then register.airefcode3 else mal_product.airefcode3 end as airef3, dbo.convert_datetime(discharge.createddate) as dischargedate, case when discharge.flag = -1 then 'Discharged' else 'Undo Discharged' end as status from spm_expense expense (nolock) left outer join master_dunstable master_duns (nolock) on expense.cbuid = master_duns.cbuid inner join spm_object (nolock) on expense.productusage = spm_object.objectid left outer join mal_productdeliver mal_product (nolock) on expense.expenseid = mal_product.expenseid and mal_product.transactionid = (select max(a.transactionid) from mal_productdeliver a (nolock) where a.expenseid = expense.expenseid) left outer join (select regis.expenseid, regis.reasoncode, regis.airefcode1, regis.airefcode2, regis.airefcode3 from prod_register regis (nolock), prod_alert_trans trans (nolock) where trans.monitorid = regis.monitorid) as register on expense.expenseid = register.expenseid inner join spm_discharge_trans discharge (nolock) on expense.expenseid = discharge.expenseid inner join spm_user on spm_user.uid = expense.uid inner join spm_group on spm_user.groupccraid = spm_group.groupid where (spm_group.parentgroupid = 1 or spm_group.parentgroupid is null) {0} and expense.disabled = 0 and expense.requesttime >= '{1}' and expense.requesttime < '{2}' order by {3}
